server.port: 8085
spring.application.name: order-service

management:
  endpoints:
    web:
      exposure.include: '*'
      health.show-details: always

management.health:
  diskspace.enabled: false
  circuitbreakers.enabled: true
  ratelimiters.enabled: false

management.metrics:
  tags.application: ${spring.application.name}
  distribution:
    percentiles-histogram:
      http.server.requests: true
      resilience4j.circuitbreaker.calls: true

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
    shared:
      slidingWindowSize: 100
      permittedNumberOfCallsInHalfOpenState: 30
      waitDurationInOpenState: 1s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
  instances:
    productBackend:
      baseConfig: default

#Retry Configuration
resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 100
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
  instances:
    productBackend:
      baseConfig: default


resilience4j.bulkhead:
  configs:
    default:
      maxConcurrentCalls: 100
  instances:
    productBackend:
      baseConfig: default
